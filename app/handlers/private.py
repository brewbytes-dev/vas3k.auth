from aiogram import F, Router, flags
from aiogram.types import Message
from aiogram.utils.markdown import hblockquote, hitalic

from app.backend.chat import ChatBackend
from app.bot_loader import AuthBot

router = Router(name="private")
router.my_chat_member.filter(F.chat.type.in_({"private"}))


@flags.release_notes
@router.message(F.reply_to_message & F.text)
async def reply_to_message(message: Message, bot: AuthBot, chat_backend: ChatBackend):
    if message.reply_to_message.from_user.id != (await message.bot.me()).id:
        return

    req = await chat_backend.get_request_by_message_id(message.from_user.id,
                                                       message.reply_to_message.message_id)

    if req is None:
        return await bot.send_message(
            message.from_user.id,
            "üì¨ –ù–µ –ø–æ–Ω—è–ª –≤–∞—Å. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ —á–∞—Ç, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞",
            reply_to_message_id=message.message_id,
            allow_sending_without_reply=True)

    if req.sent:
        return await bot.send_message(
            message.from_user.id,
            "üì¨ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
            reply_to_message_id=req.sent_message_id,
            allow_sending_without_reply=True)

    await chat_backend.mark_request_as_sent(req.req_id, message.message_id)

    header = f"üì¨ –ó–∞–ø—Ä–æ—Å –≤ —á–∞—Ç –æ—Ç {message.from_user.mention_html()}:"
    msg_quote = hblockquote(message.text)
    footer = hitalic("–ü—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω—Ä–∞–≤–∏—Ç—Å—è")

    await bot.send_message(
        req.chat_id,
        f"{header}\n\n{msg_quote}\n\n{footer}"
    )

    await bot.send_message(
        message.from_user.id,
        "üì¨ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –≤–∞—Å –¥–æ–±–∞–≤—è—Ç –≤ —á–∞—Ç –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç",
        reply_to_message_id=message.message_id,
        allow_sending_without_reply=True
    )
